### This code was used to perform the alayses for Tribulus paper
### The analyses were desingned by Sofia Carvajal-Endara and Marc. T. J. Johnson

## loading some of packages used
require(lme4)
require(lmerTest)
library(gdata)
library(plyr)
library(stringr)
library(tidyr)
library(car)
library(MuMIn)
library(magrittr)
library(plyr)
library(dplyr)
library(Rmisc)
library(MASS)
library(gdata)
library(car)
library(pscl)
library(AER)
require(nlme)
require(ggplot2)
require(GGally)
require(reshape2)

#****************************************************************************************#
###### Q1: Fruit morphology variation among schizocarp/plants/population         #########
#****************************************************************************************#
### Estimating variation in nature (poulation/plant/schizocarp) per trait. Including
### 2pop: EG-AB/15 plants per popolation/4 schizocarps per plant/4 to 5 mericarps per 
### schizocarps
### note: lower spine 1 -> present 0 -> absent.

Trib15ind <- read.table("Individualvariation.txt", header = TRUE, sep = "\t") #loading data
head(Trib15ind)
str(Trib15ind)

# renaming variable Site = Population
names(Trib15ind)[names(Trib15ind)=="Site"] <- "Population"

# Setting variables as factors
Trib15ind <- within(Trib15ind, {
  Plant <- factor(Plant)
  Schizocarp <- factor(Schizocarp)
  Mericarp <- factor(Mericarp)
})
str(Trib15ind)

## Checking some deescriptive data
pairs(Trib15ind[,5:9])
descrip.data <- as.data.frame(t(sapply(Trib15ind[,c(5:7,9)], 
     function(x) list(means=mean(x,na.rm=TRUE),sd=sd(x,na.rm=TRUE), min=min(x, na.rm = T), 
     max=max (x, na.rm = T)))))

### In order to perform the variance partition we used linear mixed effect models
### as a response variable we used the mericarp traits and the random factors were: 
### Site/Plant/Schizocarp.
### I think the model shouldn't inlcude Site as a random factor beacause it has only 2 leves 
### and as a rule of thumb random factors should have at least 7 levels. Marc said it's fine.
### We also made the partition variance analyisis for each site and result were consistent

#*************                Including both sites               ************************#
library(lme4)
library(lmerTest)

#------------------------ Width
lm.width<- lmer(Width ~ 1 + (1|Population) + (1|Population:Plant) + 
    (1|Population:Plant:Schizocarp), data = Trib15ind, REML = T)

## Checking assumptions
plot(lm.width)
opar <- par(mfrow=c(2,2))
hist(Trib15ind$Width)
plot(fitted(lm.width),resid(lm.width)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm.width))
qqline(resid(lm.width), col="red")
hist(resid(lm.width)) 
par(opar) # looks relatively ok

## Summary variance data
summary(lm.width) ## we use the "Variance" values of this table to estimate the % of variance explained.

## testing significance of each random effects
## one way is to drop each factor manuallyand run the model and then test for the sig.
## using anova function for example dropping "Plant"
lm.width.red <- lmer(Width ~ 1 + (1|Population) + (1|Population:Plant:Schizocarp), data = Trib15ind, REML = T)
anova(lm.width, lm.width.red)

## However there is a function that does it automatically in lmerTest packacge
##rand(lm1) ## rand is an alias of ranova now, but is not working anymore, so we used ranova
ranova(lm.width) ## p values were divided by 2 read paper methods explanation

#------------------------Length
lm.length<- lmer(Length ~ 1  + (1|Population) + (1|Population:Plant) + 
    (1|Population:Plant:Schizocarp), data = Trib15ind, REML = T)

## Checking assumptions
plot(lm.length)
opar <- par(mfrow=c(2,2))
hist(Trib15ind$Length)
plot(fitted(lm.length),resid(lm.length)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm.length))
qqline(resid(lm.length), col="red")
hist(resid(lm.length)) 
par(opar) # looks relatively ok

## Summary variance data
summary(lm.length)

## testing significance of each random effects
ranova(lm.length) #p values / by 2


#-----------------------Spine.tip.distance
lm.upspines<- lmer(Spine.tip.distance ~ 1  + (1|Population) + (1|Population:Plant) + 
        (1|Population:Plant:Schizocarp), data = Trib15ind, na.action = na.omit, REML = T)

## Checking assumptions
opar <- par(mfrow=c(2,2))
hist(Trib15ind$Spine.tip.distance)
plot(fitted(lm.upspines),resid(lm.upspines)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm.upspines))
qqline(resid(lm.upspines), col="red")
hist(resid(lm.upspines)) 
par(opar) # it does not look that good, but transfomations (log, sqrt, cub, Tukey) did not 
          # help. Original data seems to be the best option since dist. of resd looks ok

## Summary variance data
summary(lm.upspines)

## testing significance of each random effects
ranova(lm.upspines) #p values / by 2


#-----------------------Mass
lm.mass <- lmer(sqrt(Mass) ~ 1  + (1|Population) + (1|Population:Plant) + (1|Population:Plant:Schizocarp), 
      data = Trib15ind, na.action = na.omit, REML = T)

## Checking assumptions
opar <- par(mfrow=c(2,2))
hist(Trib15ind$Mass)
plot(fitted(lm.mass),resid(lm.mass)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm.mass))
qqline(resid(lm.mass), col="red")
hist(resid(lm.mass)) 
par(opar) # We used sqrt transformation to improve model fit

## Summary variance data
summary(lm.mass)

## testing significance of each random effects
ranova(lm.mass) #p values / by 2

# For lower spines I used a glmer model because is a binary response
# ranova function does not work with glmer models so test the sig. of random
# effects manually
#-----------------------lower.spines
lm.lowspines<- glmer(lower.spine ~ 1 + (1|Population) + (1|Population:Plant) +
  (1|Population:Plant:Schizocarp), data = Trib15ind,na.action = na.omit, family = binomial)
summary(lm.lowspines) # no residual variation is estimetated in glmer
plot(lm.lowspines)

#testing significance of each random effects
mfull <- glmer(lower.spine ~ 1 + (1|Population) + (1|Population:Plant) + 
    (1|Population:Plant:Schizocarp), data = Trib15ind, na.action = na.omit, family = binomial)

mred <- glmer(lower.spine ~ 1 + (1|Population) + (1|Population:Plant), 
              data = Trib15ind, family = binomial, na.action = na.omit, 
              control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(mred) 
anova(mfull, mred) #p values / by 2 (Schizocarp)

mred2 <- glmer(lower.spine ~ 1 + (1|Population) + (1|Population:Plant:Schizocarp), 
  data = Trib15ind, na.action = na.omit, family = binomial)
summary(mred2)
anova(mfull, mred2) #p values / by 2 (Plant)

mred3 <- glmer(lower.spine ~ 1 + (1|Population:Plant) + (1|Population:Plant:Schizocarp), 
  data = Trib15ind, family = binomial, na.action = na.omit)
summary(mred3)
anova(mfull, mred3)#p values / by 2 (Population)

#*************                         Per site:                 ************************#
#:::::::::::::::::::::::::::::              EG             ::::::::::::::::::::::::::::::#

## subsetting data for EG
Trib15indEG <- subset(Trib15ind, Population == "El Garrapatero")
library(gdata) 

# dropping unused levels
Trib15indEG <- drop.levels(Trib15indEG) 
str(Trib15indEG)

#-----------------------Width
lmEG.width<- lmer(Width ~ 1 + (1|Plant) + (1|Plant:Schizocarp), data = Trib15indEG, REML = T)
summary(lmEG.width)
plot(lmEG.width)
ranova(lmEG.width) #p values / by 2

## removing outliers to improve normality
Trib15indEG2 <- subset(Trib15indEG, Trib15indEG$Width >= 1)
Trib15indEG2 <- drop.levels(Trib15indEG) 
str(Trib15indEG2)

lmEG.width <- lmer(Width ~ 1  + (1|Plant) + (1|Plant:Schizocarp), data = Trib15indEG2, REML = T)
summary(lmEG.width)
plot(lmEG.width)
ranova(lmEG.width)

#-----------------------Length
lm1<- lmer(Length ~ 1  + (1|Plant) + (1|Plant:Schizocarp), data = Trib15indEG, REML = T)
summary(lm1)
plot(lm1)
ranova(lm1) #p values / by 2

#-----------------------Spine.tip.distance
lm1<- lmer(Spine.tip.distance ~ 1  + (1|Plant) + (1|Plant:Schizocarp), data = Trib15indEG, REML = T, na.action = na.omit)
summary(lm1)
plot(lm1)
ranova(lm1)#p values / by 2

#-----------------------Mass
lm1<- lmer(sqrt(Mass) ~ 1  + (1|Plant) + (1|Plant:Schizocarp), data = Trib15indEG, REML = T, na.action = na.omit)
summary(lm1)
plot(lm1)
ranova(lm1)#p values / by 2

#-----------------------lowespines
lm1 <- glmer(lower.spine ~ 1  + (1|Plant) + (1|Plant:Schizocarp), data =Trib15indEG, family = binomial)
summary(lm1)
plot(lm1)

#testing significance of each random effect
mfull <- glmer(lower.spine ~ 1  + (1|Plant) + (1|Plant:Schizocarp), data =Trib15indEG, family = binomial)
mred <- glmer(lower.spine ~ 1  + (1|Plant), data =Trib15indEG, family = binomial) 
anova(mfull, mred) #p values / by 2

mred2 <- glmer(lower.spine ~ 1  + (1|Plant:Schizocarp), data =Trib15indEG, family = binomial)
anova(mfull, mred2) #p values / by 2

#:::::::::::::::::::::::::::::         AB            :::::::::::::::::::::::::::::::::::#

## subsetting data for AB
Trib15indAB <- subset(Trib15ind, Population == "Academy Bay")
library(gdata) 
Trib15indAB <- drop.levels(Trib15indAB) #dropping unused levels
str(Trib15indAB)

#-----------------------Width
lm1<- lmer(Width ~ 1  + (1|Plant) + (1|Plant:Schizocarp), data = Trib15indAB, REML = T)
summary(lm1)
plot(lm1)

## removing outliers to improve normality
Trib15indAB2 <- subset(Trib15indAB, Trib15indAB$Width >= 1)
Trib15indAB2 <- drop.levels(Trib15indAB2) 
str(Trib15indAB2)

lm1<- lmer(sqrt(Width) ~ 1 + (1|Plant) + (1|Plant:Schizocarp), data = Trib15indAB2, REML = T)
summary(lm1)
plot(lm1)
ranova(lm1)#p values / by 2

#-----------------------Length
lm1<- lmer(Length ~ 1 + (1|Plant) + (1|Plant:Schizocarp), data = Trib15indAB, REML = T)
summary(lm1)
plot(lm1)
ranova(lm1)#p values / by 2

#-----------------------Spine.tip.distance
lm1<- lmer(Spine.tip.distance ~ 1  + (1|Plant) + (1|Plant:Schizocarp), na.action = na.omit,
           data = Trib15indAB, REML = T)
summary(lm1)
plot(lm1)
ranova(lm1) #p values / by 2

#-----------------------MASS
lm1<- lmer(sqrt(Mass) ~ 1  + (1|Plant) + (1|Plant:Schizocarp), na.action = na.omit,
           data = Trib15indAB, REML = T)
summary(lm1)
plot(lm1)
ranova(lm1) #p values / by 2

#-----------------------lowerspines
lm1 <- glmer(lower.spine ~ 1  + (1|Plant) + (1|Plant:Schizocarp), data =Trib15indAB, 
      na.action = na.omit, family = binomial)
summary(lm1)
plot(lm1)

#testing significance of each random effect
mfull <- glmer(lower.spine ~ 1  + (1|Plant) + (1|Plant:Schizocarp), na.action = na.omit,
               data =Trib15indAB, family = binomial)
summary(mfull)

mred <- glmer(lower.spine ~ 1  + (1|Plant), na.action = na.omit, data = Trib15indAB, 
        family = binomial, control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5))) 
anova(mfull, mred) 

mred2 <- glmer(lower.spine ~ 1  + (1|Plant:Schizocarp),na.action = na.omit, data =Trib15indAB, family = binomial) 
anova(mfull, mred2)

#***************************************************************************************#
###############                 Q2: Seed predation variation              ###############
#***************************************************************************************#
###Q2: Does seed predation varies among populations/islands/years
### I tested the difference in seed predation rate in 2 different ways:
### 1. I using proportion of eaten mericarps per pop.
### 2. I using the proportion of seeds removed per mericarp as the response variable.

## Note: Noeaten->Number of eaten seeds per mericarp. Eaten binary:0 (eaten) 1 (noneaten)
## Opening and checking the data
Trib00 <- read.table("Naturalpopfull.txt", header = TRUE, sep = "\t")
Trib00$Year <- factor(Trib00$Year)
str(Trib00)
head(Trib00)

### Cheking correlation among mericarp traits
panel.cor <- function(x, y, digits=2, prefix="", cex.cor) 
{
  usr <- par("usr"); on.exit(par(usr)) 
  par(usr = c(0, 1, 0, 1)) 
  r <- abs(cor(x, y, use = "complete.obs")) 
  txt <- format(c(r, 0.123456789), digits=digits)[1] 
  txt <- paste(prefix, txt, sep="") 
  if(missing(cex.cor)) cex <- 0.8/strwidth(txt) 
  test <- cor.test(x,y) 
  # borrowed from printCoefmat
  Signif <- symnum(test$p.value, corr = FALSE, na = FALSE, 
        cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
        symbols = c("***", "**", "*", ".", " ")) 
  text(0.5, 0.5, txt, cex = cex) 
  text(.8, .8, Signif, cex=cex, col=2) 
}

Trib00Traits <-Trib00[, c(5,6,7,10,12)]
str(Trib00Traits)
pairs(Trib00Traits, lower.panel=panel.smooth, upper.panel=panel.cor)


#**********************          Proportion per pop            **************************#
### Preparing Table with proportion of mericarps eaten vs non-eaten per population
Trib00$PopYearIsland <- do.call(paste, c(Trib00[c("Population", "Year", "Island")], sep = "_"))
table <- Trib00 %>%
  group_by(PopYearIsland, EatenBinary) %>%
  summarise (n = n()) %>%
  mutate(freq = n / sum(n))

library(tidyr)
table1 <- as.data.frame(spread(table[,-4], EatenBinary, n))
str(table1)
head(table1)
colnames(table1)[2] <- "Eaten"
colnames(table1)[3] <- "Non.eaten"
library(stringr)
metadata <- as.data.frame(str_split_fixed(table1$PopYearIsland,"_", 3))
prop.eaten <- cbind(metadata, table1)
colnames(prop.eaten)[1] <- "Population"
colnames(prop.eaten)[2] <- "Year"
colnames(prop.eaten)[3] <- "Island"
prop.eaten$beaksize <- ifelse((prop.eaten$Island == "Isabella"), "1", 
   ifelse((prop.eaten$Island == "Santa.Cruz"),"1",
   ifelse((prop.eaten$Island == "Espanola"),"1",
   ifelse((prop.eaten$Island == "San.Cristobal"),"0",
   ifelse((prop.eaten$Island == "Floreana"),"0",
   ifelse((prop.eaten$Island == "Baltra"),"0",
   ifelse((prop.eaten$Island == "Seymou.Norte"),"0", "0")))))))

str(prop.eaten)
#write.csv(prop.eaten, "prop.eatentest.csv")

## To test for interactions beaksize and Year I used data from the only the four islands
## that were sampled 3 consecutive years

# subseting data of 4 islands
prop.eaten4 <- subset(prop.eaten, Island == "Santa.Cruz"| Island == "Isabella"|Island == "Floreana"|Island == "San.Cristobal")
prop.eaten4$beaksize <- as.factor(prop.eaten4$beaksize)
prop.eaten4 <- drop.levels(prop.eaten4)
str(prop.eaten4)

# Decribing temporal variation in percentage of predation
summary(prop.eaten4)
prop.eaten4.year <- with(prop.eaten4, aggregate(Eaten, by = list(Year = Year), mean))
prop.eaten4.year

summary(prop.eaten4)
prop.eaten4.island <- with(prop.eaten4, aggregate(Eaten, by = list(Island = Island), mean))
prop.eaten4.island

summ2016 <- prop.eaten4 %>%
  filter(Year == "2016") %>%
  filter(Eaten > 50)

summ2017 <- prop.eaten4 %>%
  filter(Year == "2017") %>%
  filter(Eaten > 50)

# In 2016 2 population from 18 sampled  showed predation over 50%
# Whereas in 2017 10 from 20 showed predation over 50% and 3 over 75%

# For testing interaction beaksize and Year on seed predation we used glmer with proportion
# of eaten as response variable (Turcotte et at 2014 as reference for the model and code)
# I used Eaten first because the question was framed in terms of predation variation 
# not in mericarp survival

glmfull <- glmer(cbind(Eaten, Non.eaten) ~ beaksize + Year + beaksize:Year + (1|Island), 
    data=prop.eaten4, na.action=na.omit, family=binomial)
summary(glmfull)
Anova(glmfull, type = "II") # Marc suggeted II instead of III. When III is used beak size 
## marginally significant is sig I am not sure yet which I should you in the case of interaction. 
## This is what Bolker suggests: 
## https://stats.stackexchange.com/questions/101566/anova-type-iii-test-for-a-glmm

# When Including interaction island by Year result changed.
# Marc's coments on this were: I think we should include the first model and 
# then the models by year, labeling them A and B. 
# But mention in the main text something like: “if we include island:year interaction the 
# effect of beak size:year goes away, suggesting there may be additional features of 
# islands with Magnirostris that also influence predation rates”

## Testing sig. of random factor
glmred <- glm(cbind(Eaten, Non.eaten) ~ beaksize + Year + beaksize:Year, data=prop.eaten4, 
  na.action=na.omit, family=binomial)
anova(glmfull, glmred) # p value / 2 

### Beak size as fixed effect, by year:
#----------------------2015
prop.eaten2015 <- subset(prop.eaten4, Year == "2015")
glmfull2015 <- glmer(cbind(Eaten, Non.eaten) ~ beaksize + (1|Island), data=prop.eaten2015, na.action=na.omit, family=binomial)  
summary(glmfull2015)
#Anova(glmfull2015, type ="II")

# Testing significance LRT
glmred2015 <- glm(cbind(Eaten, Non.eaten) ~ beaksize, 
     data=prop.eaten2015, na.action=na.omit, family=binomial) 
summary(glmred2015)
anova(glmfull2015, glmred2015) # p value / 2 

#----------------------2016
prop.eaten2016 <- subset(prop.eaten4, Year == "2016")
glmfull2016 <- glmer(cbind(Eaten, Non.eaten) ~ beaksize + (1|Island), 
                     data=prop.eaten2016, na.action=na.omit, family=binomial)  
summary(glmfull2016)
plot(glmfull2016)
#Anova(glmfull2016, type ="II")

prop.eaten2016.beak <- with(prop.eaten2016, aggregate(Eaten, by = list(beaksize = beaksize), mean))

# Testing significance LRT
glmred2016 <- glm(cbind(Eaten, Non.eaten) ~ beaksize, 
                  data=prop.eaten2016, na.action=na.omit, family=binomial)
summary(glmred2016)
anova(glmfull2016, glmred2016) # p value / 2 

#----------------------2017
prop.eaten2017 <- subset(prop.eaten4, Year == "2017")
glmfull2017 <- glmer(cbind(Eaten, Non.eaten) ~ beaksize + (1|Island), 
                     data=prop.eaten2017, na.action=na.omit, family=binomial)  
summary(glmfull2017)
#Anova(glmfull2017, type ="II")

# Testing significance LRT
glmred2017 <- glm(cbind(Eaten, Non.eaten) ~ beaksize, 
                  data=prop.eaten2017, na.action=na.omit, family=binomial)
anova(glmfull2017, glmred2017)


#---------------------Including all islands
glmfull <- glmer(cbind(Eaten, Non.eaten) ~ beaksize + Year + beaksize:Year + (1|Island), data=prop.eaten, na.action=na.omit, family=binomial)
summary(glmfull)
Anova(glmfull, type = "II") 

glmred <- glm(cbind(Eaten, Non.eaten) ~ beaksize + Year + beaksize:Year, data=prop.eaten, na.action=na.omit, family=binomial)
anova(glmfull, glmred) # p value / 2

#---------------------2016 with 7 islands
prop.eaten2016.2 <- subset(prop.eaten, Year == "2016")
prop.eaten2016.2$beaksize <- as.factor(prop.eaten2016.2$beaksize)
prop.eaten2016.2 <- drop.levels(prop.eaten2016.2)

glmfull2016.2 <- glmer(cbind(Eaten, Non.eaten) ~ beaksize + (1|Island), 
                       data=prop.eaten2016.2, na.action=na.omit, family=binomial)  
summary(glmfull2016.2)
#Anova(glmfull2016.2, type ="II")

glmred2016.2 <- glm(cbind(Eaten, Non.eaten) ~ beaksize, 
                    data=prop.eaten2016.2, na.action=na.omit, family=binomial)
anova(glmfull2016.2, glmred2016.2) # p value / 2 

#*****************        Proportion of eaten seeds per mericarp             ************#
## 2. Proportion of eaten seeds per mericarp estimated from the number of seeds per mericarp.  
## It was based on the length + width + spine length, using the subset of mericarps data 
## from Sta. Cruz-for which whe counted in 2015, for most of the populations the number of 
## seeds per mericarp) and use the porportion of seeds eaten as a response variable. 

Tribnseeds <- read.table("Numberofseeds.txt", header = TRUE, sep = "\t")
str(Tribnseeds)
head(Tribnseeds)
Tribnseeds$lowerspines <- as.factor(Tribnseeds$lowerspines)

## Exploring which variables predict better the number of seeds
## No NAS to test the importance of spine.tip.distance as predictor
Tribnseeds2 <- na.omit(Tribnseeds)
zfull <- glm(Nseeds ~ log(Width) + log(Length) + log(Spine.tip.distance) + lowerspines, 
             family = poisson(link = "log"), data = Tribnseeds2)

##Testing for overdispersion
library(AER)
dispersiontest(zfull)
1 - pchisq(deviance(zfull),df.residual(zfull))

## Dropping variables to test for significant factors
drop1(zfull, test="LRT")

## I used complete set and exclude Spine.tip.distance because it was not important
zred0 <- glm(Nseeds ~ log(Width) + log(Length) + lowerspines, family = quasipoisson(link="log"), data = Tribnseeds)

1 - pchisq(deviance(zred0),df.residual(zred0))
anova(zred0,test = "Chisq")
drop1(zred0, test = "LRT")

zbest <- glm(Nseeds ~ log(Length) + log(Width) + log(Length)*log(Width) + lowerspines, 
    family = quasipoisson(link = "log"), data = Tribnseeds)
summary(zbest)
anova(zbest,test = "Chisq")

## selecting the best model usig MuMIN
library(MuMIn)
options(na.action = "na.fail")
a <- glm(Nseeds ~ log(Length)*log(Width)* lowerspines, family = poisson(link = "log"), data = Tribnseeds)
summary(a)
cc <- dredge(a, beta = F, evaluate = T, rank = AIC, trace = T)
subset(cc, delta < 2)
plot(cc, labAsExpr = TRUE)

zbest <- lm(Nseeds ~ log(Length) + log(Width) + log(Length):log(Width), data = Tribnseeds)
summary(zbest)

## Predicting values for the complete set of data

Trib00_NS1 <- read.table("Naturalpopfull.txt", header = TRUE, sep = "\t")
Trib00_NS1$lowerspines <- as.factor(Trib00_NS1$lowerspines)
Trib00_NS1$Year<- as.factor(Trib00_NS1$Year)
str(Trib00_NS1)
#Note: Noeaten -> number of seeds eaten. EatenBinary: 1 -> non eaten| 0 -> eaten

## In the final selected model to predict number of seeds I excluded lower spines because 
##floreana2015 do not have data on lower spines.

zbest <- glm(Nseeds ~ log(Length) + log(Width) + log(Length)*log(Width), 
            family = poisson(link = "log"), data = Tribnseeds)
library(AER)
dispersiontest(zbest)
summary(zbest)
1 - pchisq(deviance(zfull),df.residual(zfull))
library(pscl)
pR2(zbest)

zbestlm <- lm(Nseeds ~ log(Length) + log(Width) + log(Length)*log(Width), data = Tribnseeds)
summary(zbestlm)

## preparing data
Trib00_NS1$NSpredicted <- predict(zbest, newdata = Trib00_NS1, type = "response")
str(Trib00_NS1)

Trib00_NS1$beaksize <- ifelse((Trib00_NS1$Island == "Isabella"), "1", 
   ifelse((Trib00_NS1$Island == "Santa.Cruz"),"1",
   ifelse((Trib00_NS1$Island == "Espanola"),"1",
   ifelse((Trib00_NS1$Island == "San.Cristobal"),"0",
   ifelse((Trib00_NS1$Island == "Floreana"),"0",
   ifelse((Trib00_NS1$Island == "Baltra"),"0",
   ifelse((Trib00_NS1$Island == "Seymou.Norte"),"0", "0")))))))

## checking variables type
Trib00_NS01 <- subset(Trib00_NS1)
str(Trib00_NS01)

Trib00_NS01$beaksize <- as.factor(Trib00_NS01$beaksize)
Trib00_NS01$Year <- as.factor(Trib00_NS01$Year)
Trib00_NS01$Noeaten <- as.numeric(Trib00_NS01$Noeaten)
Trib00_NS01$propeaten <- (Trib00_NS01$Noeaten/Trib00_NS01$NSpredicted)## calc. prop.eaten
Trib00_NS01 <- drop.levels(Trib00_NS01)
Trib00_NS01$propeaten
str(Trib00_NS01)
sum(is.na(Trib00_NS01$propeaten))

## I first rounded the predicted values but Marc suggested me to not do it. So I just 
## eliminated the values that have proportion of eaten seeds larger that predicted number
## of seeds
## I think rounding values will help to fit the models!!

#proportion over than 1 == 1
Trib00_NS01$propeaten[Trib00_NS01$propeaten > 1] <- 1
Trib00_NS01$non.eaten <- (1-Trib00_NS01$propeaten) # adding variable num. of seeds non eaten

str(Trib00_NS01)

## To test the interactions including only the 4 islands sampled the 3 years
## subbseting
Trib00_NS4 <- subset(Trib00_NS01, Island == "Santa.Cruz"| Island == "Isabella"|Island == "Floreana"|Island == "San.Cristobal")
Trib00_NS4 <- drop.levels(Trib00_NS4)

#write.csv(Trib00_NS4, "Trib00_NS4.test.csv") saving file

## I first tried to fit a lmer using data transformation:
Fullmodel <- lmer((log(propeaten*100) ^ (1/2)) ~ Year + beaksize + Year:beaksize + 
        (1|Island) + (1|Island:Population), na.action=na.omit, data=Trib00_NS4)
summary(Fullmodel)
Anova(Fullmodel, type = "II")
ranova(Fullmodel)
plot(Fullmodel)

Fullmodel2 <- lmer((log(propeaten*100) ^ (1/2)) ~ Year + beaksize + Year:beaksize +
      (1|Island) + (1|Island:Population) + (1|Island:Population:Year), na.action=na.omit, 
      data=Trib00_NS4)
summary(Fullmodel2)
Anova(Fullmodel2, type = "II")
ranova(Fullmodel2)
plot(Fullmodel2)

## residual distribution is not normal
## checking again the best transformation (Marc requested it)
Fullmodel1 <- lmer(log(sqrt(propeaten)+1) ~ Year + beaksize + Year*beaksize + (1|Island) + 
    (1|Island:Population), na.action=na.omit, data=Trib00_NS4)

opar <- par(mfrow=c(2,2))
hist(log(sqrt(Trib00_NS4$propeaten)+1))
plot(fitted(Fullmodel1),resid(Fullmodel1)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(Fullmodel1))
qqline(resid(Fullmodel1), col="red")
hist(resid(Fullmodel1)) 
par(opar) # looks bad bimodal dist.

Fullmodel2 <- lmer(sqrt(log(propeaten + 1)) ~ Year + beaksize + Year*beaksize + (1|Island) + 
  (1|Island:Population) + (1|Island:Population:Year), na.action=na.omit, data=Trib00_NS4)

summary(Fullmodel2)
Anova(Fullmodel2, type = "II")
ranova(Fullmodel2)
plot(Fullmodel2)
hist(residuals(Fullmodel2)) #looks bad

##I've tried several trans. No transformation seems to be good. 
## Therefore I used a binomial model
glmfull <- glmer(cbind(propeaten, non.eaten)~ beaksize + Year + beaksize:Year + (1|Island) + 
          (1|Island:Population), data=Trib00_NS4, na.action = na.omit, family=binomial, 
          control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
# warning because data are not integers, but it ok because beacause I did no rounded the data

summary(glmfull)
Anova(glmfull, type = "II")
plot(glmfull)

glmfullb <- glmer(propeaten ~ beaksize + Year + beaksize:Year + (1|Island) + 
          (1|Island:Population), data=Trib00_NS4, na.action = na.omit, family=binomial,
          control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
# warning because data are not integers, but it ok because beacause I did no rounded the data
summary(glmfullb)
Anova(glmfullb, type = "II") # another way to specify the model

glmfullc <- glmer(propeaten ~ beaksize + Year + beaksize:Year + (1|Island) + 
    (1|Island:Population), data=Trib00_NS4, weights = (propeaten + non.eaten), 
    na.action = na.omit, family=binomial, control=glmerControl(optimizer="bobyqa",
    optCtrl=list(maxfun=2e5)))
# warning because data are not integers, but it ok because beacause I did no rounded the data
summary(glmfullc)
Anova(glmfullc, type = "II") # another way to specify the model

#testing significance of random effects
glmred1 <- glmer(propeaten ~ beaksize + Year + beaksize:Year + (1|Island), data=Trib00_NS4, 
  na.action=na.omit,  family=binomial, control=glmerControl(optimizer="bobyqa", 
  optCtrl=list(maxfun=2e5)))
anova(glmfullb, glmred1) # p value / 2 

glmred2 <- glmer(propeaten ~ beaksize + Year + beaksize:Year + (1|Population), data=Trib00_NS4, na.action=na.omit, family=binomial)
anova(glmfullb, glmred2)

# testing the effect by year
# ---------------------------2015
Trib00_NS42015 <- subset(Trib00_NS4, Year == "2015")
Trib00_NS42015 <- drop.levels(Trib00_NS42015)

glmfull2015 <- glmer(propeaten ~ beaksize + (1|Island) + (1|Island:Population), data=Trib00_NS42015, na.action = na.omit, family=binomial)
summary(glmfull2015)
#Anova(glmfull2015, type = "II")

glmfull2015red1 <- glmer(propeaten ~ beaksize + (1|Island), data=Trib00_NS42015, na.action=na.omit, family=binomial)
anova(glmfull2015, glmfull2015red1) # p value / 2)

glmfull2015red2 <- glmer(propeaten ~ beaksize  + (1|Island:Population), data=Trib00_NS42015, na.action=na.omit, family=binomial)
anova(glmfull2015, glmfull2015red2) # p value / 2)

Trib00_NS42015.mean <- with(Trib00_NS42015, aggregate(propeaten, by = list(beaksize = beaksize), mean))
Trib00_NS42015.mean
# ---------------------------2016
Trib00_NS42016 <- subset(Trib00_NS4, Year == "2016")
Trib00_NS42016 <- drop.levels(Trib00_NS42016)

glmfull2016 <- glmer(propeaten ~ beaksize  + (1|Island) + (1|Island:Population), data=Trib00_NS42016, na.action=na.omit, family=binomial, control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(glmfull2016)
#Anova(glmfull2016, type = "II")

glmfull2016red1 <- glmer(propeaten ~ beaksize  + (1|Island), data=Trib00_NS42016, na.action=na.omit, family=binomial, control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
anova(glmfull2016, glmfull2016red1) # p value / 2)

glmfull2016red2 <- glmer(propeaten ~ beaksize  + (1|Island:Population), data=Trib00_NS42016, na.action=na.omit, family=binomial, control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
anova(glmfull2016, glmfull2016red2) # p value / 2)

Trib00_NS42016.mean <- with(Trib00_NS42016, aggregate(propeaten, by = list(beaksize = beaksize), mean))
Trib00_NS42016.mean
# ---------------------------2017
Trib00_NS42017 <- subset(Trib00_NS4, Year == "2017")
Trib00_NS42017 <- drop.levels(Trib00_NS42017)

glmfull2017 <- glmer(propeaten ~ beaksize  + (1|Island) + (1|Island:Population), data=Trib00_NS42017, na.action=na.omit,  family=binomial)
summary(glmfull2017)
#Anova(glmfull2017, type = "II")

glmfull2017red1 <- glmer(propeaten ~ beaksize  + (1|Island), data=Trib00_NS42017, na.action=na.omit, family=binomial)
anova(glmfull2017, glmfull2017red1) # p value / 2)

glmfull2017red2 <- glmer(propeaten ~ beaksize   + (1|Island:Population), data=Trib00_NS42017, na.action=na.omit, family=binomial)
anova(glmfull2017, glmfull2017red2) # p value / 2)

Trib00_NS42017.mean <- with(Trib00_NS42017, aggregate(propeaten, by = list(beaksize = beaksize), mean))
Trib00_NS42017.mean


#***************************************************************************************#
###############            Plotting variation in predation: Q2            ###############
#***************************************************************************************#
library(ggplot2)
sem <- function(x) sd(x)/sqrt(length(x))

data_summary <- function(x) {
  m <- mean(x)
  ymin <- m-sem(x)
  ymax <- m+sem(x)
  return(c(y=m,ymin=ymin,ymax=ymax))
}

# order islands according finch community
prop.eaten4$Island <- factor(prop.eaten4$Island, levels = c("Floreana", "San.Cristobal", 
        "Isabella", "Santa.Cruz"))

#ploting proportion of mericarps eaten
prop.eaten.pop <-ggplot(prop.eaten4, 
  aes(x = beaksize, y = Eaten, group= beaksize, color =Island, fill=Island)) +
  facet_wrap( ~ Year) +
  labs(x="Finch community",y="Proportion of eaten mericarps per population") +
  stat_summary(fun.data=data_summary, geom="pointrange", color="black")+
  facet_wrap(~Year, scales="free_x")+
  theme_bw()+
  guides(fill=FALSE)+
  theme(text=element_text(family="Times New Roman"))+
  theme(axis.title.x = element_text(color="black",
  size=16, face="bold"), axis.title.y = element_text(color="black", 
  size=14, face="bold"))+
  theme(strip.text.x = element_text(size = 14, colour = "black", face="bold"))
prop.eaten.pop + geom_dotplot(binaxis='y', stackdir='center', dotsize=1)
prop.eaten.pop + geom_jitter(shape=16, aes(color=Island), position=position_jitter(0.2))

#ploting proportion of seeds eaten permericap
library(Rmisc)
tmp1 <- summarySE(Trib00_NS4, measurevar="propeaten", groupvars=c("Population","Year", "Island"), na.rm=TRUE)

# ordering islands
tmp1$Island <- factor(tmp1$Island, levels = c("Floreana", "San.Cristobal", "Isabella", "Santa.Cruz"))

##Ploting everything together
prop.seeds.eaten <-ggplot(tmp1, 
  aes(x=Year, y=propeaten, group=Population, colour= Island)) +
  #facet_wrap( ~ Island, nrow = 3) +
  geom_errorbar(aes(ymin=propeaten-se, ymax=propeaten+se), width=.1) +
  geom_line() +
  geom_point() +
  theme_bw()+
  labs(x="Year",y="Proportion of seeds eaten per mericarp") +
  theme(axis.text.y=element_text(size=10),
        axis.title=element_text(size=10,face="bold"))+
  theme(legend.title=element_text(size=10, face="bold"),
        legend.text=element_text(size=10))
prop.seeds.eaten

##Ploting wraped by island
prop.seeds.eaten <-ggplot(tmp1, 
  aes(x=Year, y=propeaten, group=Population)) +
  facet_wrap( ~ Island, ncol = 4) +
  geom_errorbar(aes(ymin=propeaten-se, ymax=propeaten+se), width=.1) +
  geom_line() +
  geom_point() +
  theme_bw()+
  labs(x="Year",y="Proportion of seeds eaten per mericarp") +
  theme(text=element_text(family="Times New Roman"))+
  theme(axis.text.y=element_text(size=10),
        axis.title=element_text(size=14,face="bold"))+
  theme(legend.title=element_text(size=14, face="bold"),
        legend.text=element_text(size=10))
#theme(axis.text.x=element_blank())
prop.seeds.eaten

prop.eaten4.Eaten <- with(prop.eaten4, aggregate(Eaten, list(Year=Year, beaksize = beaksize), mean, na.pass=T, na.rm=T))
prop.eaten4.Eaten$se <- with(prop.eaten4, aggregate(Eaten, list(Year=Year, beaksize = beaksize),function(x) sd(x, na.rm=T)/sqrt(length(na.omit(x)))))[,3]
prop.eaten4.Eaten

prop.eaten4plot <- ggplot(prop.eaten4,
  aes(x = beaksize, y = Eaten, group= beaksize, color = Island, fill = Island)) + 
  facet_wrap( ~ Year)+
  stat_summary(fun.data=data_summary, geom="pointrange", color="black")+
  guides(fill=FALSE)+
  theme_bw()+
  theme(axis.text.y=element_text(size=14),
        axis.title=element_text(size=16,face="bold"))+
  theme(legend.title=element_text(size=12, face="bold"),
        legend.text=element_text(size=12))+
  theme(strip.background = element_rect(colour="black", fill="white"))+
  geom_jitter( aes(shape=Island), position=position_jitter(0.2))+
  scale_color_manual(values=c("#999999", "#999999", "black", "black"))
prop.eaten4plot

#****************************************************************************************#
#########            Q3:Selection on Tribulus Natural Populations             ############
#****************************************************************************************#
## We use a selection model approach
## We used to different response varaibles 1. a binary response survival of not 
## (mericarp eaten or not) and 2. proportion of seeds removed from mericarp

##******************             Binary response of survival            ****************##
## Preparing data
Trib00_NS1 <- read.table("Naturalpopfull.txt", header = TRUE, sep = "\t")
str(Trib00_NS1)
Trib00_NS1$Year <- as.factor(Trib00_NS1$Year)
Trib00_NS1$lowerspines <- as.factor(Trib00_NS1$lowerspines)

## Data used to predict number of seeds per mericarp
Tribnseeds <- read.table("Numberofseeds.txt", header = TRUE, sep = "\t")
## selected model exclude lower spines because floreana2015 do not have data on lower spines
zbest <- glm(Nseeds ~ log(Length) + log(Width) + log(Length)*log(Width), family = poisson(link = "log"), data = Tribnseeds)
## Including predicted values
Trib00_NS1$NSpredicted <- predict(zbest, newdata = Trib00_NS1, type = "response")
str(Trib00_NS1)

## Adding beack size factor
Trib00_NS1$beaksize <- ifelse((Trib00_NS1$Island == "Isabella"), "1", 
  ifelse((Trib00_NS1$Island == "Santa.Cruz"),"1",
  ifelse((Trib00_NS1$Island == "Espanola"),"1",
  ifelse((Trib00_NS1$Island == "San.Cristobal"),"0",
  ifelse((Trib00_NS1$Island == "Floreana"),"0",
  ifelse((Trib00_NS1$Island == "Baltra"),"0",
  ifelse((Trib00_NS1$Island == "Seymou.Norte"),"0", "0")))))))
str(Trib00_NS1)

Trib00_NS1$beaksize <- as.factor(Trib00_NS1$beaksize)
Trib00_NS1$EatenBinary <- as.factor(Trib00_NS1$EatenBinary)
Trib00_NS1$propeaten <- (Trib00_NS1$Noeaten/Trib00_NS1$NSpredicted)
Trib00_NS1$propeaten
sum(is.na(Trib00_NS1$propeaten))
#proportion over than 1 == 1
Trib00_NS1$propeaten[Trib00_NS1$propeaten > 1] <- 1
str(Trib00_NS1)

# removing data with NAs in order to compare models the data set has to be the same
Trib00_NS3 <- Trib00_NS1[, -c(10, 12, 13)] #excluding var with 0
Trib00_NS3 <- na.omit(Trib00_NS3)
str(Trib00_NS3)

# selecting data from the 4 islands sampled 3 years
Trib00_NS4 <- subset(Trib00_NS3, Island == "Santa.Cruz"| Island == "Isabella"|Island == "Floreana"|Island == "San.Cristobal")
library(gdata)
Trib00_NS4 <- drop.levels(Trib00_NS4)
str(Trib00_NS4)

cor(Trib00_NS4$Length, Trib00_NS4$Width) #0.43
cor(Trib00_NS4$Length, Trib00_NS4$Spinelength) #0.509

# exploring colinearity
library(usdm)
corr1 <- Trib00_NS4[,5:7]
vif(corr1)
vifcor(corr1, th=0.4)
vifstep(corr1, th=2)

### because two variables variable are correlated with length we decided to use PCA between 
## length and width

## Obtaining PCscores
library(psych)
temp1 <- Trib00_NS4[, c(5,6)]
fit <- principal(temp1, rotate= "none")
str(fit)
summary(fit)
head(fit$scores)
PC1 <-as.vector(fit$scores)
temp3 <- cbind(Trib00_NS4, PC1)
cor(temp3$PC1, temp3$Spinelength) ##0.47

### Standardizing values to a mean of 0 and a standar deviation of 1
temp4 <- temp3 
temp4$SSpinelength <- scale(temp4$Spinelength)
apply(temp4[,14:15], 2, sd)
cor(temp4$PC1, temp4$Width) # 0.85
cor(temp4$PC1, temp4$Length) # 0.85

## We used MuMIN to select the best model and then we used the best model estimates
globalm <-glmer(formula = EatenBinary ~ beaksize + Year + beaksize:Year + 
    lowerspines + lowerspines:Year + beaksize:lowerspines + PC1 + 
    PC1:Year + beaksize:PC1 + SSpinelength + SSpinelength:Year + 
    beaksize:SSpinelength + (1 | Island) + (1 | Island:Population) + 
    (1 | Island:PC1) + (1 | Island:SSpinelength) + (1 | Island:lowerspines), 
    data = temp4, family = binomial, control=glmerControl(optimizer="bobyqa",
    optCtrl=list(maxfun=2e5)))

## I run this code for the selection model I could take a couple of days to run.
library(MuMIn)
#options(na.action = "na.fail")
#dredbinary <- dredge(globalm, beta = F, evaluate = T, rank = AIC, trace = T)
#par(mar = c(3,5,6,4))
#subset(dredbinary , delta < 2)
#plot(dredbinary, labAsExpr = TRUE)
#dredbinary 
#table<-summary(model.avg(dredbinary, subset = delta < 2))
#summary(get.models(dredbinary , 1)[[1]])

## We obbtained the following best model and also a table with the average from the set
## of best models based on values AIC. 
## We present both in the paper, the best and the average of the best models

#### best model
lmbest3 <- glmer(EatenBinary ~ beaksize + lowerspines + PC1 + SSpinelength + Year +  
  (1 | Island) + (1 | Island:Population) + (1 | Island:PC1) +  
  (1 | Island:SSpinelength) + (1 | Island:lowerspines) + beaksize:lowerspines +  
  beaksize:SSpinelength + beaksize:Year + lowerspines:Year + PC1:Year + 
  SSpinelength:Year, family = binomial, data = temp4,
  control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(lmbest3)
Anova(lmbest3, type = 2)

#### The I tested the significance of random effects
lmbest3red1<- glmer(EatenBinary ~ beaksize + lowerspines + PC1 + SSpinelength + Year +  
  (1 | Island) + (1 | Island:Population) + (1 | Island:PC1) +  
  (1 | Island:SSpinelength) + beaksize:lowerspines +  
  beaksize:SSpinelength + beaksize:Year + lowerspines:Year + PC1:Year + 
  SSpinelength:Year, family = binomial, data = temp4,
  control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
anova(lmbest3, lmbest3red1)

lmbest3red2<- glmer(EatenBinary ~ beaksize + lowerspines + PC1 + SSpinelength + Year +  
  (1 | Island) + (1 | Island:Population) + (1 | Island:PC1) +  
  (1 | Island:lowerspines) + beaksize:lowerspines +  
  beaksize:SSpinelength + beaksize:Year + lowerspines:Year + PC1:Year + 
  SSpinelength:Year, family = binomial, data = temp4,
  control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
anova(lmbest3, lmbest3red2)

lmbest3red3<- glmer(EatenBinary ~ beaksize + lowerspines + PC1 + SSpinelength + Year +  
  (1 | Island) + (1 | Island:Population)+ (1 | Island:SSpinelength) + 
  (1 | Island:lowerspines) + beaksize:lowerspines +  beaksize:SSpinelength + 
  beaksize:Year + lowerspines:Year + PC1:Year + 
  SSpinelength:Year, family = binomial, data = temp4,
  control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
anova(lmbest3, lmbest3red3)

lmbest3red4 <- glmer(EatenBinary ~ beaksize + lowerspines + PC1 + SSpinelength + Year +       (1 | Island)  + (1 | Island:PC1) +  
  (1 | Island:SSpinelength) + (1 | Island:lowerspines) + 
  beaksize:lowerspines +  beaksize:SSpinelength + beaksize:Year + 
  lowerspines:Year + PC1:Year + SSpinelength:Year, family = binomial, data = temp4,
  control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
anova(lmbest3, lmbest3red4)

lmbest3red5 <- glmer(EatenBinary ~ beaksize + lowerspines + PC1 + SSpinelength + Year+  
  (1 | Island:Population) + (1 | Island:PC1) +  
  (1 | Island:SSpinelength) +(1 | Island:lowerspines)+beaksize:lowerspines +  
  beaksize:SSpinelength + beaksize:Year + lowerspines:Year + PC1:Year + 
  SSpinelength:Year, family = binomial, data = temp4,
  control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
anova(lmbest3, lmbest3red5)

# I removed two random effects that were not significant from the final best model
# (1 | Island:PC1) +  (1 | Island:SSpinelength):

lmbest3.2 <- glmer(EatenBinary ~ beaksize + lowerspines + PC1 + SSpinelength + Year +  
    (1 | Island) + (1 | Island:Population) +  
    (1 | Island:lowerspines) + beaksize:lowerspines +  
    beaksize:SSpinelength + beaksize:Year + lowerspines:Year + PC1:Year + 
    SSpinelength:Year + PC1:beaksize, family = binomial, data = temp4,
    control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(lmbest3.2)
Anova(lmbest3.2, type = 2)

#***************************************************************************************#
###############            Plotting selection patterns: Q3                ###############
#***************************************************************************************#
library(sjPlot)
library(Matrix)
library(sjmisc)
library(sjlabelled)
library(ggplot2)

set_theme(base = theme_classic())
plot_model(lmbest3.2, type = "eff", terms = c("SSpinelength", "beaksize"),
           colors = "bw", ci.lvl = 0.95)
plot_model(lmbest3.2, type = "eff", terms = c("lowerspines", "beaksize"),
           colors = "bw", ci.lvl = 0.95)
plot_model(lmbest3.2, type = "eff", terms = c("PC1", "beaksize"),
           colors = "bw", ci.lvl = 0.95)

plot_model(lmbest3.2, type = "eff", terms = c("SSpinelength", "Year"),
           colors = "bw", ci.lvl = 0.95)
plot_model(lmbest3.2, type = "eff", terms = c("lowerspines", "Year"),
           colors = "bw", ci.lvl = 0.95)
plot_model(lmbest3.2, type = "eff", terms = c("PC1", "Year"),
           colors = "bw", ci.lvl = 0.95)

##*********     Proportion of seed non-eaten as response variable         **************##

## I used the same approach of model selection. This time the response variable was (1-propeaten)
## I obtaied the best model

str(temp4)
lmbestprop <- glmer((1-propeaten) ~ beaksize + lowerspines + PC1 + SSpinelength + Year +  
   (1 | Island) + (1 | Island:Population) + (1 | Island:PC1) +  
   (1 | Island:SSpinelength) + (1 | Island:lowerspines) + beaksize:lowerspines +  
   beaksize:SSpinelength + beaksize:Year + lowerspines:Year + PC1:Year + 
   SSpinelength:Year, family = binomial, data = temp4,
   control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(lmbestprop)
Anova(lmbestprop, type = 2)

#### testing significance of random effects
lmbestprop.red1 <- glmer((1-propeaten) ~ beaksize + lowerspines + PC1 + SSpinelength + Year +  
  (1 | Island) + (1 | Island:Population) + (1 | Island:PC1) +  
  (1 | Island:SSpinelength) + beaksize:lowerspines +  
  beaksize:SSpinelength + beaksize:Year + lowerspines:Year + PC1:Year + 
  SSpinelength:Year, family = binomial, data = temp4,
  control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
anova(lmbestprop, lmbestprop.red1)

lmbestprop.red2 <- glmer((1-propeaten) ~ beaksize + lowerspines + PC1 + SSpinelength + Year +  
  (1 | Island) + (1 | Island:Population) + (1 | Island:PC1) +  
  (1 | Island:lowerspines) + beaksize:lowerspines +  
  beaksize:SSpinelength + beaksize:Year + lowerspines:Year + PC1:Year + 
  SSpinelength:Year, family = binomial, data = temp4,
  control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
anova(lmbestprop, lmbestprop.red2)

lmbestprop.red3 <- glmer((1-propeaten) ~ beaksize + lowerspines + PC1 + SSpinelength + Year +  
  (1 | Island) + (1 | Island:Population)  +  
  (1 | Island:SSpinelength) + (1 | Island:lowerspines) + beaksize:lowerspines + 
  beaksize:SSpinelength + beaksize:Year + lowerspines:Year + PC1:Year + 
  SSpinelength:Year, family = binomial, data = temp4,
  control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
anova(lmbestprop, lmbestprop.red3)

lmbestprop.red4 <- glmer((1-propeaten) ~ beaksize + lowerspines + PC1 + SSpinelength + Year +
  (1 | Island)  + (1 | Island:PC1) +  (1 | Island:SSpinelength) + 
  (1 | Island:lowerspines) + beaksize:lowerspines +  
  beaksize:SSpinelength + beaksize:Year + lowerspines:Year + 
  PC1:Year + SSpinelength:Year, family = binomial, data = temp4,
  control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
anova(lmbestprop, lmbestprop.red4)

lmbestprop.red5 <- glmer((1-propeaten) ~ beaksize + lowerspines + PC1 + SSpinelength + Year+  
  (1 | Island:Population) + (1 | Island:PC1) +  
  (1 | Island:SSpinelength) +(1 | Island:lowerspines)+beaksize:lowerspines +  
  beaksize:SSpinelength + beaksize:Year + lowerspines:Year + PC1:Year + 
  SSpinelength:Year, family = binomial, data = temp4,
  control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
anova(lmbestprop, lmbestprop.red5)

#****************************************************************************************#
#########                 Selection on Tribulus Experiment EG16                ###########
#****************************************************************************************#
# We modeled data including lost mericaps as eaten mericaprs and excluding them
# Here I just added the latest.

#-------------------------------------------------      excluding not recovered mericarp
exp <- read.table("expdata01.txt", header = TRUE, sep = "\t")
str(exp)
exp <- within(exp, {
  ID <- factor(ID)
  SeedID <- factor(SeedID)
  Site_2  <- factor(Site_2)
  Tray <- factor(Tray)
  New_Mericarps<- factor(New_Mericarps)
  Apical_tip <- factor(Apical_tip)
  Lowerspines <- factor(Lowerspines)
  Treatment <- factor(Treatment)
  Survived <- factor(Survived)
})
str(exp)
pairs(exp[c(6,7,8,13)], lower.panel=panel.smooth, upper.panel=panel.cor) #checking cont data
head(exp)

library(psych)
### Mass is correlated with length and width so I will excluded for now
temp <- exp[, c(6,7)]
str(temp)
#  obtain PC scores
fit <- principal(temp, rotate= "none")
summary(fit)
loadings(fit)
head(fit$scores)
PC1 <-as.vector(fit$scores)
biplot(fit)
temp3 <-cbind(exp,PC1)
str(temp3)
head(temp3)

m.exp3 <- glmer(Survived ~ PC1  + Lowerspines  + Treatment + (1|Tray), family = binomial, 
    data = temp3, na.action = na.omit)
summary(m.exp3)
Anova(m.exp3, type = "II")
str(temp3)

temp3.PC1 <- with(temp3, aggregate(PC1, by = list(Survived = Survived), mean))
temp3.PC1
cor(temp3$PC1, temp3$Length)

#***************************************************************************************#
###############         Plotting experiment selection: Q3                 ###############
#***************************************************************************************#

temp3mlt <- melt(temp3[, c("Survived", "Width", "Length", "Mass")],
                 id.vars="Survived") #checking data by eaten
str(temp3mlt)
labels <- c(Width = "Width", Length = "Length", Mass ="Mass")

selexp<-ggplot(temp3mlt, aes(factor(Survived), y = value, fill=factor(Survived))) +
  stat_summary(fun.data=data_summary, geom="pointrange", color="black")+
  facet_wrap(~variable, scales="free_y",labeller=labeller(variable = labels))+
  theme_bw()+
  theme(axis.text.y=element_text(size=12))+
  theme(strip.text.x = element_text(size = 12, colour = "black", face ="bold"))+
  theme(legend.text = element_text(size =14))
selexp

Low.spinesexp1 <-ggplot(temp3, aes(Survived, fill = Lowerspines)) +
  geom_bar(position = "fill") +
  theme_bw()+
  theme(axis.text.y=element_text(size=12),
        axis.title=element_text(size=16,face="bold"))+
  theme(legend.title=element_text(size=12, face="bold"),
        legend.text=element_text(size=12))+
  theme(axis.text.x=element_blank())
Low.spinesexp1

expL <- with(temp3, aggregate(Length, by = list(Survived=Survived), mean))
expL$se <- with(temp3, aggregate(Length, by = list(Survived=Survived), 
                                 function(x) sd(x)/sqrt(length(x))))[,2]
expL
str(temp3)
expL$Survived <-as.factor(expL$Survived)
str(expL)
Length<-ggplot(expL, aes(x=Survived, y=x)) + 
  geom_errorbar(aes(ymin=x-se, ymax=x+se), width=.1) +
  geom_point() +
  theme_bw()+
  theme(axis.text.y=element_text(size=14),
        axis.title=element_text(size=16,face="bold"))+
  theme(legend.title=element_text(size=12, face="bold"),
        legend.text=element_text(size=12))
Length

temp4 <- subset(temp3, Treatment == "0")

expS <- with(temp4, aggregate(Spine_distance, by = list(Survived=Survived), mean, na.rm=T))
expS$se <- with(temp3, aggregate(Spine_distance, by = list(Survived=Survived), 
                                 function(x) sd(x, na.rm = T)/sqrt(length(na.omit(x)))))[,2]
expS
str(temp3)
expS$Survived <-as.factor(expS$Survived)

str(temp4)
model4 <- glmer(Survived ~ PC1  + Lowerspines  + Spine_distance + (1|Tray), family = binomial, data = temp4, na.action = na.omit)
summary(model4)
Anova(model4, type = "II")
str(temp4)

SpineLength<-ggplot(expS, aes(x=Survived, y=x)) + 
  geom_errorbar(aes(ymin=x-se, ymax=x+se), width=.1) +
  geom_point() +
  theme_bw()+
  theme(axis.text.y=element_text(size=14),
        axis.title=element_text(size=16,face="bold"))+
  theme(legend.title=element_text(size=12, face="bold"),
        legend.text=element_text(size=12))
SpineLength

library(Rmisc)
library(gdata)

##**************************************ploting selection in natural populations in  EG
str(Trib00)
EGdata <- subset(Trib00, Population == "EG")
EGdata <- drop.levels(EGdata)
str(EGdata)
head(EGdata)
EGdf <- with(EGdata, aggregate(Length, list(Year=Year, Survived=EatenBinary), mean))
EGdf$se <- with(EGdata, aggregate(Length, list(Year=Year, Survived=EatenBinary),
                                  function(x) sd(x)/sqrt(length(x))))[,3]
EGdf$Survived <-as.factor(EGdf$Survived)
str(EGdf)
head(EGdf)
Length<-ggplot(EGdf, aes(x=Survived, y=x)) + 
  facet_wrap( ~ Year)+
  geom_errorbar(aes(ymin=x-se, ymax=x+se), width=.1) +
  geom_point() +
  theme_bw()+
  theme(axis.text.y=element_text(size=14),
        axis.title=element_text(size=16,face="bold"))+
  theme(legend.title=element_text(size=12, face="bold"),
        legend.text=element_text(size=12))
#theme(axis.text.x=element_blank())
Length

str(Trib00)
EGdata <- subset(Trib00, Population == "EG")
EGdata <- drop.levels(EGdata)
str(EGdata)
EGdf <- with(EGdata, aggregate(Spinelength, list(Year=Year, Survived=EatenBinary), mean, na.pass=T, na.rm=T))
EGdf$se <- with(EGdata, aggregate(Spinelength, list(Year=Year, Survived=EatenBinary),
    function(x) sd(x, na.rm=T)/sqrt(length(na.omit(x)))))[,3]
EGdf$Survived <-as.factor(EGdf$Survived)
str(EGdf)
Spinelength<-ggplot(EGdf, aes(x=Survived, y=x)) + 
  facet_wrap( ~ Year)+
  geom_errorbar(aes(ymin=x-se, ymax=x+se), width=.1) +
  geom_point() +
  theme_bw()+
  theme(axis.text.y=element_text(size=14),
        axis.title=element_text(size=16,face="bold"))+
  theme(legend.title=element_text(size=12, face="bold"),
        legend.text=element_text(size=12))
#theme(axis.text.x=element_blank())
Spinelength

## the pattern of selection observed in the exp. is not consitent with patterns observed
## in natural populations.

#****************************************************************************************#
###############       Q4: Mericarp traits variation and beak size.         ###############
#****************************************************************************************#

## Does variation in fruit morphology among islands correspond to finch community 
##composition?
### Cheking the  correlation of the data

Trib00 <- read.table("Naturalpopfull.txt", header = TRUE, sep = "\t")
Trib00$Year <- factor(Trib00$Year)
str(Trib00)
head(Trib00)
str(Trib00$Island)

Trib00Traits <-Trib00[, c(5,6,7,10,12)]
str(Trib00Traits)
pairs(Trib00Traits, lower.panel=panel.smooth, upper.panel=panel.cor)
library(ggplot2)

Trib00$beaksize <- as.factor(ifelse((Trib00$Island == "Isabella"), "1", 
  ifelse((Trib00$Island == "Santa.Cruz"),"1",
  ifelse((Trib00$Island == "Espanola"),"1",
  ifelse((Trib00$Island == "San.Cristobal"),"0",
  ifelse((Trib00$Island == "Floreana"),"0",
  ifelse((Trib00$Island == "Baltra"),"0",
  ifelse((Trib00$Island == "Seymou.Norte"),"0", "0"))))))))
Trib00$lowerspines <- as.factor(Trib00$lowerspines)
Trib00$Noeaten <- as.numeric(Trib00$Noeaten)
str(Trib00)

Trib00.4 <- subset(Trib00, Island == "Santa.Cruz"| Island == "Isabella"|Island == "Floreana"|Island == "San.Cristobal")
Trib00.4 <- drop.levels(Trib00.4)
str(Trib00.4)

## Testing variation in each trait
## ::::::::::::::::::::::::::::::           Width           ::::::::::::::::::::::::::::##

lm1 <- lmer(Width ~ Year + beaksize + Year:beaksize + (1|Island) + (1|Island:Population), 
            data = Trib00.4, REML = F)
summary(lm1)
Anova(lm1, type = "II")
ranova(lm1)

opar <- par(mfrow=c(2,2))
hist(Trib00$Width)
plot(fitted(lm1),resid(lm1)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm1))
qqline(resid(lm1), col="red")
hist(resid(lm1)) 
par(opar) # looks ok

###****************************          2015       ***********************************###
Trib1.2015 <- subset(Trib00.4, Year == "2015")
library(gdata) 
Trib1.2015 <- drop.levels(Trib1.2015) 
str(Trib1.2015)

lm1.1<- lmer(Width ~ beaksize + (1|Island) + (1|Island:Population), data = Trib1.2015, 
             REML = F)
Anova(lm1.1, type = "II")
summary(lm1.1)
ranova(lm1.1)

opar <- par(mfrow=c(2,2))
hist(Trib1.2015$Width)
plot(fitted(lm1.1),resid(lm1.1)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm1.1))
qqline(resid(lm1.1), col="red")
hist(resid(lm1.1)) 
par(opar) # looks ok

###****************************          2016       ***********************************###
Trib1.2016 <- subset(Trib00.4, Year == "2016")
Trib1.2016 <- drop.levels(Trib1.2016) 
str(Trib1.2016)

lm1.2<- lmer(Width ~ beaksize + (1|Island) + (1|Island:Population), data = Trib1.2016, 
             REML = F)
summary(lm1.2)
Anova(lm1.2, type = "II")
ranova(lm1.2)

opar <- par(mfrow=c(2,2))
hist(Trib1.2016$Width)
plot(fitted(lm1.2),resid(lm1.2)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm1.2))
qqline(resid(lm1.2), col="red")
hist(resid(lm1.2)) 
par(opar) # looks ok


Trib1.2016.2 <- subset(Trib00, Year == "2016")
Trib1.2016.2 <- drop.levels(Trib1.2016.2)
str(Trib1.2016.2)

lm1.2<- lmer(Width ~ beaksize + (1|Island) + (1|Island:Population), data = Trib1.2016.2,REML = F)
summary(lm1.2)
Anova(lm1.2, type = "II")
ranova(lm1.2)

opar <- par(mfrow=c(2,2))
hist(Trib1.2016.2$Width)
plot(fitted(lm1.2),resid(lm1.2)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm1.2))
qqline(resid(lm1.2), col="red")
hist(resid(lm1.2)) 
par(opar) # looks ok

##****************************          2017       ***********************************###
Trib1.2017 <- subset(Trib00.4, Year == "2017")
Trib1.2017 <- drop.levels(Trib1.2017) 
str(Trib1.2017)

lm1.3<- lmer(Width ~ beaksize + (1|Island) + (1|Island:Population), data = Trib1.2017, 
             REML = F)
summary(lm1.3)
Anova(lm1.3, type = "II")
ranova(lm1.3)

opar <- par(mfrow=c(2,2))
hist(Trib1.2017$Width)
plot(fitted(lm1.3),resid(lm1.3)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm1.3))
qqline(resid(lm1.3), col="red")
hist(resid(lm1.3)) 
par(opar) # looks ok

##::::::::::::::::::::::::::::::          Length           ::::::::::::::::::::::::::::##
lm2<- lmer(Length ~ Year + beaksize + Year*beaksize + (1|Island) + (1|Island:Population),
          data = Trib00.4, REML = F)
summary(lm2)
Anova(lm2, type = "II")
ranova(lm2)

opar <- par(mfrow=c(2,2))
hist(Trib00.4$Length)
plot(fitted(lm2),resid(lm2)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm2))
qqline(resid(lm2), col="red")
hist(resid(lm2)) 
par(opar) # looks ok?

###****************************          2015       ***********************************###
lm2.1 <- lmer(Length ~ beaksize + (1|Island) + (1|Island:Population), data = Trib1.2015, REML = T)
summary(lm2.1)
Anova(lm2.1, type = "II")
ranova(lm2.1)

opar <- par(mfrow=c(2,2))
hist(Trib1.2015$Length)
plot(fitted(lm2.1),resid(lm2.1)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm2.1))
qqline(resid(lm2.1), col="red")
hist(resid(lm2.1)) 
par(opar) # looks ok

###****************************          2016       ***********************************###
lm2.2<- lmer(Length ~ beaksize + (1|Island) + (1|Island:Population), data = Trib1.2016,
  REML = F)
summary(lm2.2)
Anova(lm2.2, type = "II")
ranova(lm2.2)

opar <- par(mfrow=c(2,2))
hist(Trib1.2016$Length)
plot(fitted(lm2.2),resid(lm2.2)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm2.2))
qqline(resid(lm2.2), col="red")
hist(resid(lm2.2)) 
par(opar) # looks ok

Trib1.2016.2 <- subset(Trib00, Year == "2016")
Trib1.2016.2 <- drop.levels(Trib1.2016.2) 
str(Trib1.2016.2)

lm2.2.2<- lmer(Length ~ beaksize + (1|Island) + (1|Island:Population), data = Trib1.2016.2,REML = F)
summary(lm2.2.2)
Anova(lm2.2.2, type = "II")
ranova(lm2.2.2)

##****************************          2017       ***********************************###
lm2.3<- lmer(Length ~ beaksize + (1|Island) + (1|Island:Population), data = Trib1.2017,na.action = na.omit, REML = F)
summary(lm2.3)
Anova(lm2.3, type = "II")
ranova(lm2.3)

opar <- par(mfrow=c(2,2))
hist(Trib1.2017$Length)
plot(fitted(lm2.3),resid(lm2.3)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm2.3))
qqline(resid(lm2.3), col="red")
hist(resid(lm2.3)) 
par(opar) # looks ok

##::::::::::::::::::::::::::::::     Tip spine distance     ::::::::::::::::::::::::::::##
lm3 <- lmer(Spinelength ~ Year + beaksize + Year*beaksize + (1|Island) + (1|Island:Population), 
  data = Trib00.4, na.action = na.omit, REML = F)
summary(lm3)
Anova(lm3, type = "II")
ranova(lm3)

opar <- par(mfrow=c(2,2))
hist(Trib00$Spinelength)
plot(fitted(lm3),resid(lm3)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm3))
qqline(resid(lm3), col="red")
hist(resid(lm3)) 
par(opar) # looks skewed but still ok

###****************************          2015       ***********************************###
lm3.1<- lmer(Spinelength ~ beaksize + (1|Island) + (1|Island:Population), 
    na.action = na.omit, data = Trib1.2015,REML = F)
summary(lm3.1)
Anova(lm3.1, type = "II")
ranova(lm3.1)

opar <- par(mfrow=c(2,2))
hist(Trib1.2015$Spinelength)
plot(fitted(lm3.1),resid(lm3.1)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm3.1))
qqline(resid(lm3.1), col="red")
hist(resid(lm3.1)) 
par(opar) # looks ok

###****************************          2016       ***********************************###
lm3.2<- lmer(Spinelength ~ beaksize + (1|Island) + (1|Island:Population), 
      na.action = na.omit, data = Trib1.2016, REML = F)
Anova(lm3.2, type = "II")
summary(lm3.2)
ranova(lm3.2)

opar <- par(mfrow=c(2,2))
hist(Trib1.2016$Spinelength)
plot(fitted(lm1.1),resid(lm1.1)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm3.2))
qqline(resid(lm3.2), col="red")
hist(resid(lm3.2)) 
par(opar) # looks ok

lm3.2.2 <- lmer(Spinelength ~ beaksize + (1|Island) + (1|Island:Population), na.action = na.omit, data = Trib1.2016.2, REML = F)
summary(lm3.2.2)
Anova(lm3.2.2, type = "II")
ranova(lm3.2.2)

##****************************          2017       ***********************************###
lm3.3<- lmer(Spinelength ~ beaksize + (1|Island) + (1|Island:Population), 
    na.action = na.omit, data = Trib1.2017, REML = F)
Anova(lm3.3, type = "II")
summary(lm3.3)
ranova(lm3.3)

opar <- par(mfrow=c(2,2))
hist(Trib1.2017$Spinelength)
plot(fitted(lm3.3),resid(lm3.3)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm3.3))
qqline(resid(lm3.3), col="red")
hist(resid(lm3.3)) 
par(opar) # skewed but still looks ok

##::::::::::::::::::::::::::::::     Lower sipines     ::::::::::::::::::::::::::::##
lm4 <- glmer(lowerspines ~ Year + beaksize + Year*beaksize + (1|Island) + 
    (1|Island:Population), data = Trib00.4, na.action = na.omit, family = binomial)
summary(lm4)
Anova(lm4, type = "II")

plot(lm4)

opar <- par(mfrow=c(2,2))
plot(fitted(lm4),resid(lm4)) 
abline(h=0,lty=2,col="red")
qqnorm(resid(lm4))
qqline(resid(lm4), col="red")
hist(resid(lm4)) 
par(opar) # it does not look that bad

lm4red1 <- glmer(lowerspines ~ Year + beaksize + Year*beaksize + (1|Island), data = Trib00.4, na.action = na.omit, family = binomial)
anova(lm4, lm4red1)

lm4red2 <- glmer(lowerspines ~ Year + beaksize + Year*beaksize + (1|Island:Population), data = Trib00.4, na.action = na.omit, family = binomial)
anova(lm4, lm4red2)


###****************************          2015       ***********************************###
lm4.1<- glmer(lowerspines ~ beaksize + (1|Island) + (1|Island:Population), family = binomial, na.action = na.omit,  data = Trib1.2015)
summary(lm4.1)
Anova(lm4.1, type = "II")

plot(lm4.1)

lm4.1.red1 <- glmer(lowerspines ~ beaksize + (1|Island), family = binomial, na.action = na.omit, data = Trib1.2015)
summary(lm4.1.red1)
anova(lm4.1, lm4.1.red1)

lm4.1.red2 <- glmer(lowerspines ~ beaksize + (1|Population), family = binomial, na.action = na.omit, data = Trib1.2015)
summary(lm4.1.red2)
anova(lm4.1, lm4.1.red2)

###****************************          2016       ***********************************###
lm4.2 <- glmer(lowerspines ~ beaksize + (1|Island) + (1|Island:Population), 
          family = binomial,  data = Trib1.2016, control=glmerControl(optimizer="bobyqa",
          optCtrl=list(maxfun=2e5)))
summary(lm4.2)
Anova(lm4.2, type = "II")

plot(lm4.2)

lm4.2.red1<- glmer(lowerspines ~ beaksize + (1|Island), family = binomial,  data = Trib1.2016)
anova(lm4.2, lm4.2.red1)

lm4.2.red2<- glmer(lowerspines ~ beaksize + (1|Population), family = binomial,  data = Trib1.2016)
anova(lm4.2, lm4.2.red2)

lm4.2 <- glmer(lowerspines ~ beaksize + (1|Island) + (1|Island:Population), family = binomial,  data = Trib1.2016.2)
summary(lm4.2)
Anova(lm4.2, type = "II")

lm4.2.red1<- glmer(lowerspines ~ beaksize + (1|Island), family = binomial,  data = Trib1.2016.2)
anova(lm4.2, lm4.2.red1)

lm4.2.red2<- glmer(lowerspines ~ beaksize + (1|Population), family = binomial,  data = Trib1.2016.2)
anova(lm4.2, lm4.2.red2)

##****************************          2017       ***********************************###
lm4.3 <- glmer(lowerspines ~ beaksize + (1|Island) + (1|Island:Population), family = binomial,  data = Trib1.2017)
summary(lm4.3)
Anova(lm4.3, type = "II")

plot(lm4.3)

lm4.3red1 <- glmer(lowerspines ~ beaksize + (1|Island), family = binomial,  data = Trib1.2017)
anova(lm4.3, lm4.3red1)

lm4.3red2 <- glmer(lowerspines ~ beaksize + (1|Population), family = binomial,  data = Trib1.2017)
anova(lm4.3, lm4.3red2)

#****************************************************************************************#
#####                          Ploting Trait Variation Q4                             ####
#****************************************************************************************#
str(Trib00.4)
tmp3 <- Trib00.4 
tmp3$Island <- factor(tmp3$Island, levels = c("Floreana", "San.Cristobal", "Isabella", "Santa.Cruz"))
library(Rmisc)

tmp3.Width <- summarySE(tmp3, measurevar="Width", groupvars=c("Population","Year", "beaksize", "Island"), na.rm=TRUE)
sem <- function(x) sd(x)/sqrt(length(x))

data_summary <- function(x) {
  m <- mean(x)
  ymin <- m-sem(x)
  ymax <- m+sem(x)
  return(c(y=m,ymin=ymin,ymax=ymax))
}

tmp3.Width

width.var <- ggplot(tmp3,
  aes(x = Island, y = Width, group= Island, color = Island, fill = Island)) + 
  facet_wrap( ~ Year)+
  stat_summary(fun.data=data_summary, geom="pointrange", color= c("gray48","gray48",
  "black","black","gray48","gray48","black","black","gray48","gray48","black","black"), size=0.5)+
  guides(fill=FALSE)+
  theme_bw()+
  theme(axis.text.y=element_text(size=14),
        axis.title=element_text(size=16,face="bold"))+
  theme(legend.title=element_text(size=12, face="bold"),
        legend.text=element_text(size=12))+
  theme(strip.background = element_rect(colour="black", fill="white"))
width.var

tmp3.Length <- summarySE(tmp3, measurevar="Length", groupvars=c("Population","Year", "beaksize", "Island"), na.rm=TRUE)
str(tmp3.Length)

Length.var <- ggplot(tmp3,
  aes(x = Island, y = Length, group = beaksize, color = Island, fill = Island)) + 
  facet_wrap( ~ Year)+
  stat_summary(fun.data=data_summary, geom="pointrange", color= c("gray48","gray48","black",
  "black","gray48","gray48","black","black","gray48","gray48","black","black"), size=0.5)+
  guides(fill=FALSE)+
  theme_bw()+
  theme(axis.text.y=element_text(size=14),
        axis.title=element_text(size=16,face="bold"))+
  theme(legend.title=element_text(size=12, face="bold"),
        legend.text=element_text(size=12))+
  theme(strip.background = element_rect(colour="black", fill="white"))
Length.var

tmp3.Spinelength <- summarySE(tmp3, measurevar="Spinelength", groupvars=c("Population","Year", "beaksize", "Island"), na.rm=TRUE)
tmp3.Spinelength

Spinelength.var <- ggplot(tmp3,
  aes(x = Island, y = Spinelength, group= beaksize, color = Island, fill = Island)) + 
  facet_wrap( ~ Year)+
  stat_summary(fun.data=data_summary, geom="pointrange", 
  color= c("gray48","gray48","black","black","gray48","gray48",
           "black","black","gray48","gray48","black","black"), size=0.5)+
  guides(fill=FALSE)+
  theme_bw()+
  theme(axis.text.y=element_text(size=14),
        axis.title=element_text(size=16,face="bold"))+
  theme(legend.title=element_text(size=12, face="bold"),
        legend.text=element_text(size=12))+
  theme(strip.background = element_rect(colour="black", fill="white"))
Spinelength.var

## lowerspines
head(tmp3)
tmp3$PopYearIsland <- do.call(paste, c(tmp3[c("Population", "Year", "Island")], sep = "_"))
table <- tmp3 %>%
  group_by(PopYearIsland, lowerspines) %>%
  summarise (n = n()) %>%
  mutate(freq = n / sum(n))
head(table)
library(tidyr)
table1 <- as.data.frame(spread(table[,-4], lowerspines, n))
str(table1)
head(table1)
colnames(table1)[2] <- "absent"
colnames(table1)[3] <- "present"
library(stringr)
metadata <- as.data.frame(str_split_fixed(table1$PopYearIsland,"_", 3))
lowerspines <- cbind(metadata, table1)
colnames(lowerspines)[1] <- "Population"
colnames(lowerspines)[2] <- "Year"
colnames(lowerspines)[3] <- "Island"
colnames(lowerspines)[7] <- "Remove"
str(lowerspines)

lowerspines[is.na(lowerspines)] <- 0
lowerspines.t <- lowerspines %>%
  filter (Remove == 0)%>%
  mutate (beaksize = ifelse(Island == "Santa.Cruz" | Island == "Isabella", 1,
        ifelse(Island == "Floreana" | Island == "San.Cristobal", 0, NA)))%>%
  arrange(match(Island, c("Floreana", "San.Cristobal", "Isabella", "Santa.Cruz")))%>%
  as.data.frame()
str(lowerspines.t)

lowerspines.t$beaksize <- as.factor(lowerspines.t$beaksize)
lowerspines.t$present <- as.integer(lowerspines.t$present)
lowerspines.t$Island <- factor(lowerspines.t$Island, levels = c("Floreana", "San.Cristobal", "Isabella", "Santa.Cruz"))
str(lowerspines00)

lowerspine.var <- ggplot(lowerspines.t,
    aes(x = Island, y = present, group= Island, color = Island, fill = Island)) + 
    facet_wrap( ~ Year)+
    stat_summary(fun.data=data_summary, geom="pointrange", 
    color= c("gray48","black","black","gray48","gray48","black","black","gray48","gray48","black","black"), size=0.5)+
    guides(fill=FALSE)+
    theme_bw()+
    theme(axis.text.y=element_text(size=14),
          axis.title=element_text(size=16,face="bold"))+
    theme(legend.title=element_text(size=12, face="bold"),
          legend.text=element_text(size=12))+
    theme(strip.background = element_rect(colour="black", fill="white"))
lowerspine.var

#***************************************************************************************#
###############                Climate PA                  ###############
#***************************************************************************************#
climate <- read.table("climate.PA.txt", header = TRUE, sep = "\t")
str(climate)
climate2010 <- subset(climate, Year >= 2014)
climate2010$Month <- as.factor(climate2010$Month)
climate2010$Year <- as.factor(climate2010$Year)
climate2010$ID <- as.factor(climate2010$ID)

summdata <- aggregate(climate2010$Precipitation, by=list(climate2010$Month, 
       climate2010$Year), FUN=sum)
summdata$Year <-summdata$Group.2

climate <-ggplot(summdata, 
                 aes(x=Group.1, y=x, group=Group.2, colour= Year)) +
  #facet_wrap( ~ Island, nrow = 3) +
  #geom_errorbar(aes(ymin=propeaten-se, ymax=propeaten+se), width=.1) +
  geom_line() +
  geom_point() +
  theme_bw()+
  labs(x="Month",y="Precipitation") +
  theme(axis.text.y=element_text(size=10),
        axis.title=element_text(size=14,face="bold"))+
  theme(legend.title=element_text(size=14, face="bold"),
        legend.text=element_text(size=12))
#theme(axis.text.x=element_blank())
climate

summdata$Month <-summdata$Group.1
summdata$Year <-summdata$Group.2
summdata$Precipitation <-summdata$x
head(summdata)
ggplot(summdata, aes(factor(Month), Precipitation, fill = Year, colour=Year)) + 
  geom_bar(stat="identity", position = "dodge", width=0.7) + 
  theme_bw()+
  labs(x="Month",y="Precipitation (mm)") +
  scale_colour_manual(values=c("2015"="black", "2014"="black",
                               "2016"="black",
                               "2017"="black"))+
  scale_fill_manual(values=c("2017"="#f0f0f0",
                             "2016"="#bdbdbd",
                             "2015"="#636363",
                             "2014"="black"))+
  theme(text=element_text(size=16, family="Times New Roman"))

